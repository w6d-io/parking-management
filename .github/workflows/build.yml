name: Build release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:

  create_release:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install zip
        run: sudo apt-get install zip -y

      - name: Extract repository name
        id: build_env
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          CLEAN_TAG_NAME=${TAG_NAME#v}
          echo "TAG_NAME=$CLEAN_TAG_NAME" >> $GITHUB_ENV
          echo "REPO_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Update version in define.php
        run: |
          sed -i "s/define('PKMGMT_VERSION', '[^']*');/define('PKMGMT_VERSION', '${{ env.TAG_NAME }}');/" define.php

      - name: Update version in wp-parking-management.php
        run: |
          sed -i "s/ \* Version: .*/ \* Version: ${{ env.TAG_NAME }}/" wp-parking-management.php

      - name: Create temporary directory
        run: mkdir -p temp/${{ env.REPO_NAME }}

      - name: Copy files to temporary directory
        run: rsync -av --exclude-from='.distignore' ./ temp/${{ env.REPO_NAME }}

      - name: Create ZIP Archive
        run: |
          cd temp/
          zip -r ../${{ env.REPO_NAME }}.zip .

      - name: Run Release Drafter
        id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.REPO_NAME }}.zip
          asset_name: ${{ env.REPO_NAME }}.zip
          asset_content_type: application/zip
